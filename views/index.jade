extends layout

block content
  .app-container
    .row.content-container
      nav.navbar.navbar-inverse.navbar-fixed-top.navbar-top
        .container-fluid
          .navbar-header
            button.navbar-expand-toggle(type='button')
              i.fa.fa-bars.icon
            ol.breadcrumb.navbar-breadcrumb
              li.active Dashboard
            button.navbar-right-expand-toggle.pull-right.visible-xs(type='button')
              i.fa.fa-th.icon
          // /.navbar-header
          ul.nav.navbar-nav.navbar-right
            li.dropdown.profile
              a.dropdown-toggle(href='#', data-toggle='dropdown', role='button', aria-expanded='false')
                | Eye Berry Pi
                span.caret
              ul.dropdown-menu.animated.fadeInDown
                li
                  .profile-info
                    h4.username Eye Berry Pi
                    p eyeberrypi@gmail.com
                    .btn-group.margin-bottom-2x(role='group')
                      a(href='http://79.170.44.95/eyeberrypi.com/', target='_blank')
                        button.btn.btn-default(type='button')
                          i.fa.fa-user
                          |  Website
                      | {#
                      a(href="")
                        | #}
                        | {#
                        button.btn.btn-default(type='button')
                          i.fa.fa-sign-out
                          |  Logout
                        | #}
                        | {#
                      | #}
          // /.nav
      // /.navbar
      .side-menu.sidebar-inverse
        nav.navbar.navbar-default(role='navigation')
          .side-menu-container
            .navbar-header
              a.navbar-brand(href='#')
                .icon.fa.fa-user-secret
                .title Eye Berry Pi Admin
              button.navbar-expand-toggle.pull-right.visible-xs(type='button')
                i.fa.fa-times.icon
            ul.nav.navbar-nav
              li
                a(href="{{ url_for('home') }}")
                  span.icon.fa.fa-tachometer
                  span.title Dashboard
            // /.nav
          // /.side-menu-container
        // /.navbar
      // /.side-menu
      // Main Content
      .container-fluid
        section.side-body.padding-top
          section.content
            #surveillance_panel.row(align='center')
            .row
              section.col-lg-12.connectedSortable
                .box.box-solid.bg-light-blue-gradient
                  .box-header.with-border
                    h3.box-title Faces Detected
                    .btn-group.pull-right
                      button.btn.btn-box-tool(type='button', data-widget='collapse')
                        i.fa.fa-minus
                  .box-body
                    #detected-faces
                  .box-footer.text-center
                    #facedetectbtn.btn-group.pull-right
                      button#retrain.btn.btn-primary.btn-xs(type='button', onclick='retrainClassifier()')
                        i.fa.fa-refresh.fa-fw
                        |  Retrain Database
                .box.box-solid.bg-green-gradient
                  .box-header.with-border
                    h3.box-title Camera Control Panel
                    .btn-group.pull-right
                      button.btn.btn-box-tool(type='button', data-widget='collapse')
                        i.fa.fa-minus
                  .box-body
                    .col-md-8
                      .box
                        .box-header.with-border
                          | Cameras
                        .box-body
                          .row
                            .col-md-12
                              #system-cameras.panel-body
                    .col-md-4
                      .form-group
                        label IP Camera URL
                        input#camURL.form-control(value='', placeholder='Enter stream URL')
                      .form-group
                        label Video Processing Application
                        select#application.form-control
                          option(value='detect_motion') Motion Detection
                          option(value='detect_recognise') Face Recognition
                          option(value='motion_detect_recognise') Motion Detection & Face Recognition
                          option(value='segment_detect_recognise') Motion Object Segmentation & Face Recognition
                          option(value='detect_recognise_track') Face Recognition & Tracking
                      .form-group
                        label Face Detection Method
                        select#detectionMethod.form-control
                          option(value='opencv') Opencv Haar Cascade
                          option(value='dlib') Dlib HOG Face Detector
                  .box-footer.text-center
                    #createcamerabutton.btn-group.pull-right
                      button#addcam.btn.btn-success.btn-xs(type='button', onclick='addCamera()')
                        i.fa
                        |  Add Camera
        footer.app-footer
          .wrapper
            span.pull-right  Copyright Â© 2016
            |  Eye Berry Pi
          // /.wrapper
        // /.app-footer
  // /.app-container
  // jQuery
  script(src='/stylesheets/bower_components/jquery/dist/jquery.min.js', type='text/javascript')
  // Bootstrap Core JavaScript
  script(src='/stylesheets/bower_components/bootstrap/dist/js/bootstrap.min.js', type='text/javascript')
  // Chart.js JavaScript
  script(src='/stylesheets/bower_components/chart.js/dist/Chart.min.js', type='text/javascript')
  // Bootstrap Switch JavaScript
  script(src='/stylesheets/bower_components/bootstrap-switch/dist/js/bootstrap-switch.min.js', type='text/javascript')
  // jQuery Match Height JavaScript
  script(src='/stylesheets/bower_components/matchHeight/dist/jquery.matchHeight-min.js', type='text/javascript')
  // jQuery Data Tables JavaScript
  script(src='/stylesheets/bower_components/datatables.net/js/jquery.dataTables.min.js', type='text/javascript')
  // Bootstrap Data Tables JavaScript
  script(src='/stylesheets/bower_components/datatables-plugins/integration/bootstrap/3/dataTables.bootstrap.min.js', type='text/javascript')
  // Select2 JavaScript
  script(src='/stylesheets/bower_components/select2/dist/js/select2.full.min.js', type='text/javascript')
  // Ace Builds JavaScript
  script(src='/stylesheets/bower_components/ace-builds/src-min/ace.js', type='text/javascript')
  script(src='/stylesheets/bower_components/ace-builds/src-min/mode-html.js', type='text/javascript')
  script(src='/stylesheets/bower_components/ace-builds/src-min/theme-github.js', type='text/javascript')
  // Bootstrap Theme JavaScript
  script(src='/stylesheets/bootstrap/js/app.js', type='text/javascript')
  script(src='/stylesheets/bootstrap/js/index.js', type='text/javascript')
  // ./wrapper
  // jQuery 2.2.3
  script(type='text/javascript', src='//code.jquery.com/jquery-1.4.2.min.js')
  script(type='text/javascript', src='//cdnjs.cloudflare.com/ajax/libs/socket.io/1.3.5/socket.io.min.js')
  script(type='text/javascript', charset='utf-8').
      function addCamera() {
          //getting selected option from dropdowns
          var camURL = document.getElementById("camURL").value;
          var e1 = document.getElementById("application");
          var application = e1.options[e1.selectedIndex].value;
          var e2 = document.getElementById("detectionMethod");
          var detectionMethod = e2.options[e2.selectedIndex].value;
          alertstyle = "alert-success";
          var icon = '<i class="fa fa-video-camera fa-3x" aria-hidden="true"></i>'
          var icondiv = '<div class="product-info">' + icon + '</div>'
          if (detectionMethod == "opencv") {
              dlibDetection = false;
          }
          else {
              dlibDetection = true
          }
          $('#addcam').html('<i class="fa fa-spin fa-cog fa-3x fa-fw" style="font-size:12px;"></i> Adding Camera');
          console.log(camURL + " " + application + " " + detectionMethod);
          $.ajax({
              type: "POST",
              url: "{{ url_for('add_camera') }}",
              data: {'camURL': camURL, 'application': application, 'detectionMethod': dlibDetection},
              success: function (cam) {
                  console.log(cam);
                  var camdiv = document.createElement("div");
                  camdiv.setAttribute("class", "alert alert-dismissable " + alertstyle);
                  var btn = document.createElement("BUTTON");
                  btn.setAttribute("type", "button");
                  btn.setAttribute("class", "close");
                  btn.setAttribute("data-dismiss", "alert");
                  btn.setAttribute("aria-hidden", "true");
                  btn.setAttribute("onclick", "removeCamera(this.id)");
                  btn.setAttribute("id", "camera_" + cam.camNum);
                  btn.innerHTML = "&times;";
                  camdiv.innerHTML = '<div class="text-center"><span>' + icon + '<div><strong>Camera ' + cam.camNum + ' FPS: <strong id="camera_' + cam.camNum + '_fps">' + "Loading... </strong></div><div>" + '<font size="0.9">' + camURL + '<font></span></div>';
                  camdiv.appendChild(btn);
                  document.getElementById("system-cameras").appendChild(camdiv);
                  var viddiv = document.createElement("div");
                  viddiv.setAttribute("class", "col-md-4 col-sm-6 col-xs-12");
                  var vidstream = document.createElement("img");
                  vidstream.setAttribute("class", "img-thumbnail panel panel-default");
                  vidstream.setAttribute("id", cam.camNum);
                  vidstream.setAttribute("src", "/video_streamer/" + cam.camNum);
                  vidstream.setAttribute("width", "540");
                  vidstream.setAttribute("height", "320");
                  viddiv.appendChild(vidstream);
                  document.getElementById("surveillance_panel").appendChild(viddiv);
                  $('#addcam').html('Add Camera');
              },
              error: function (error) {
                  console.log(error);
              }
          });
      }
      function retrainClassifier() {
          $('#retrain').html('<i class="fa fa-refresh fa-spin fa-3x fa-fw" style="font-size:12px;"></i> Retraining Database');
          $.ajax({
              type: "POST",
              url: "{{ url_for('retrain_classifier') }}",
              data: {},
              success: function (results) {
                  console.log(results.finished);
                  $('#retrain').html('<i class="fa fa-refresh fa-fw"></i> Retrain Database');
              },
              error: function (error) {
                  console.log(error);
              }
          });
      }
      function removeFace(id) {
          //var text=$('#' + id + '_input').html();
          var values = id.split('_');
          var name = values[0];
          var camera = values[1];
          var person = document.getElementById(name + "_" + camera); //remove person from div
          person.parentNode.removeChild(person);
          $.ajax({
              type: "POST",
              url: "{{ url_for('remove_face') }}",
              data: {'predicted_name': name, 'camera': camera},
              success: function (results) {
                  console.log(results);
                  var person = document.getElementById(name + "_" + camera); //sometimes faces get reloaded before before they have been deleted this ensures they are removed from the list
                  person.parentNode.removeChild(person);
              },
              error: function (error) {
                  console.log(error);
              }
          });
      }
      function addFace(id) {
          var values = id.split('_');
          var name = values[0];
          var camera = values[1];
          if (values[2] == 'trust') {
              var trust = true
          }
          else {
              var trust = false
          }
          var newName = document.getElementById(name + "_" + camera + "_input").value;
          var person = document.getElementById(name + "_" + camera); //remove person from div
          person.parentNode.removeChild(person);
          $.ajax({
              type: "POST",
              url: "{{ url_for('add_face') }}",
              data: {'person_id': name, 'new_name': newName, 'camera': camera, 'trust': trust},
              success: function (results) {
                  console.log(results);
              },
              error: function (error) {
                  console.log(error);
              }
          });
      }
      function createAlert() {
          //getting selected option from dropdowns
          emailAddress = document.getElementById("emailAddress").value;
          var confidence = document.getElementById("slider").value;
          var e = document.getElementById("cameras");
          var cam = e.options[e.selectedIndex].value;
          var e1 = document.getElementById("event");
          var eventd = e1.options[e1.selectedIndex].text;
          var e2 = document.getElementById("alarmstate");
          var alarm = e2.options[e2.selectedIndex].text;
          var e3 = document.getElementById("people");
          var pers = e3.options[e3.selectedIndex].text;
          var email = false;
          var push = false;
          var triggerA = false;
          var notifyP = false;
          if (document.getElementById("email").checked == true) {
              email = true;
              alertstyle = "alert-danger"
          }
          // if(document.getElementById("push").checked==true) {
          //     push = true;
          //     alertstyle = "alert-info"
          // }
          if (document.getElementById("trigger").checked == true) {
              triggerA = true;
              alertstyle = "alert-danger"
          }
          // if(document.getElementById("notify").checked==true) {
          //     notifyP = true;
          //     alertstyle = "alert-danger"
          // }
          //ajax post used to send alert data via json [ 'push_alert': push,'email_alert':email, 'trigger_alarm':triggerA, 'notify_police':notifyP]
          $.ajax({
              type: "POST",
              url: "{{ url_for('create_alert') }}",
              data: {
                  'camera': cam,
                  'eventdetail': eventd,
                  'alarmstate': alarm,
                  'person': pers,
                  'push_alert': push,
                  'email_alert': email,
                  'trigger_alarm': triggerA,
                  'notify_police': notifyP,
                  'emailAddress': emailAddress,
                  'confidence': confidence
              },
              success: function (results) {
                  console.log(results);
                  var alertdiv = document.createElement("div");
                  alertdiv.setAttribute("class", "alert alert-dismissable " + alertstyle);
                  var btn = document.createElement("BUTTON");
                  btn.setAttribute("type", "button");
                  btn.setAttribute("class", "close");
                  btn.setAttribute("data-dismiss", "alert");
                  btn.setAttribute("aria-hidden", "true");
                  btn.setAttribute("onclick", "removeAlert(this.id)");
                  btn.setAttribute("id", results.alert_id);
                  btn.innerHTML = "&times;";
                  alertdiv.innerHTML = results.alert_message;
                  alertdiv.appendChild(btn);
                  document.getElementById("alert-list").appendChild(alertdiv);
              },
              error: function (error) {
                  console.log(error);
              }
          });
      }
      function removeAlert(id) {
          $.ajax({
              type: "POST",
              url: "{{ url_for('remove_alert') }}",
              data: {'alert_id': id},
              success: function (results) {
                  console.log(results);
              },
              error: function (error) {
                  console.log(error);
              }
          });
      }
      $(document).ready(function () {
          var socket = io.connect('http://' + document.domain + ':' + location.port + '/surveillance');
          var numbers_received = [];
          var people_received = [];
          $("#changestate").click(function () {
              socket.emit('alarm_state_change');
              return false;
          });
          $("#panic").click(function () {
              socket.emit('panic');
              return false;
          });
          socket.on('my response', function (msg) {           //socket.on used to define event handeler
              $('#log').append('<p>' + msg.data + '</p>');
          });
          $('form#emit').submit(function (event) {
          });
          $('form#broadcast').submit(function (event) {
              socket.emit('my broadcast event', {data: $('#broadcast_data').val()});
              return false;
          });
          socket.on('people_detected', function (json) {
              console.log("Received peopledata in Loop" + json);
              var people = JSON.parse(json);
              people_string = '';
              for (var i = 0; i < people.length; i++) {
                  if (!document.getElementById(people[i].identity + "_" + people[i].camera)) {
                      var img_string = "/get_faceimg/" + people[i].identity + "_" + people[i].camera + "#";
                      /////////////////////////////////////////////////////////////////// Main divs
                      var maindiv = document.createElement("div");
                      maindiv.setAttribute("class", "col-md-2 ");
                      maindiv.setAttribute("id", people[i].identity + "_" + people[i].camera);
                      var thumbdiv = document.createElement("div");
                      thumbdiv.setAttribute("class", "thumbnail ");
                      /////////////////////////////////////////////////////////////////// img element
                      var imgj = document.createElement("img");
                      imgj.setAttribute("src", img_string + new Date().getTime());
                      imgj.setAttribute("height", "100");
                      imgj.setAttribute("width", "100");
                      imgj.setAttribute("id", people[i].identity + "_" + people[i].camera + "_image");
                      imgj.setAttribute("alt", "Random Name");
                      imgj.setAttribute("class", "person"); //img-circle
                      //document.getElementById("progressbar").appendChild(imgj);
                      thumbdiv.appendChild(imgj);
                      /////////////////////////////////////////////////////////////////// name element
                      var name = document.createElement("p");
                      name.setAttribute("class", "text-center predictedName text-black");
                      name.setAttribute("id", people[i].identity + "_" + people[i].camera + "_prediction");
                      name.innerHTML = "<strong>" + people[i].prediction + "</strong>";
                      thumbdiv.appendChild(name);
                      /////////////////////////////////////////////////////////////////// button element
                      var aligndiv = document.createElement("div");
                      aligndiv.setAttribute("class", "pull-right");
                      var btndiv = document.createElement("div");
                      btndiv.setAttribute("class", "btn-group");
                      var btn = document.createElement("BUTTON");
                      btn.setAttribute("type", "button");
                      btn.setAttribute("class", "btn btn-default btn-xs dropdown-toggle");
                      btn.setAttribute("data-toggle", "dropdown");
                      var spn = document.createElement("span");
                      spn.setAttribute("class", "caret");
                      btn.appendChild(spn);
                      var list = document.createElement("ul");
                      list.setAttribute("class", "dropdown-menu text-centre");
                      list.setAttribute("role", "menu");
                      list.setAttribute("id", "faceActionList");
                      var listitem = document.createElement("li");
                      var inner = document.createElement("a");
                      inner.setAttribute("id", people[i].identity + "_" + people[i].camera + "_remove");
                      inner.setAttribute("onclick", "removeFace(this.id)");
                      inner.innerHTML = "Remove";
                      //addFace(id)
                      listitem.appendChild(inner);
                      list.appendChild(listitem);
                      var listitem = document.createElement("li");
                      var inner = document.createElement("a");
                      inner.setAttribute("id", people[i].identity + "_" + people[i].camera + "_trust");
                      inner.setAttribute("onclick", "addFace(this.id)");
                      inner.innerHTML = "Trust";
                      listitem.appendChild(inner);
                      list.appendChild(listitem);
                      var listitem = document.createElement("li");
                      var inner = document.createElement("a");
                      inner.setAttribute("data-toggle", "modal");
                      inner.setAttribute("id", "addfacebtnID");
                      inner.setAttribute("data-target", "#" + people[i].identity + "_" + people[i].camera + "_modal");
                      inner.innerHTML = "Add New Face";
                      listitem.appendChild(inner);
                      list.appendChild(listitem);
                      btndiv.appendChild(btn);
                      btndiv.appendChild(list);
                      aligndiv.appendChild(btndiv);
                      //document.getElementById("progressbar").appendChild(btndiv);
                      thumbdiv.appendChild(aligndiv);
                      ///////////////////////////////////////////////////////////////////  progress bar element
                      var d1 = document.createElement("div");
                      d1.setAttribute("class", "progress");
                      var d2 = document.createElement("div");
                      //var values = people[i].prediction.split('_');
                      //var name = values[0];
                      var conf = people[i].confidence;
                      console.log("New Person: " + people[i].prediction + ":" + people[i].confidence);
                      if (people[i].prediction != "unknown") {
                          d2.setAttribute("class", "progress-bar progress-bar-success");
                          d2.setAttribute("role", "progress-bar progress-bar-success");
                      }
                      else {
                          d2.setAttribute("class", "progress-bar progress-bar-danger");
                          d2.setAttribute("role", "progress-bar progress-bar-danger");
                          conf = people[i].confidence;
                      }
                      d2.setAttribute("aria-valuenow", "50");
                      d2.setAttribute("aria-valuemin", "0");
                      d2.setAttribute("aria-valuemax", "100");
                      d2.setAttribute("style", "width:" + conf + "%");
                      d2.innerHTML = conf + "%";
                      d1.appendChild(d2);
                      var info = document.createElement("span");
                      info.setAttribute("id", "detectioinfo");
                      info.setAttribute("style", "text-align:center; color:black; font-size:70%;");
                      info.innerHTML = "Camera " + people[i].camera + "  -  " + people[i].timeD;
                      /////////////////////////////////////////////////////////////////////////////////////
                      var modal = document.createElement("div");
                      modal.setAttribute("class", "modal modal-default fade col-md-3 text-center");
                      modal.setAttribute("id", people[i].identity + "_" + people[i].camera + "_modal");
                      modal.setAttribute("tabindex", "-1");
                      modal.setAttribute("role", "dialog");
                      modal.setAttribute("aria-labelledby", "myModalLabel");
                      modal.setAttribute("aria-hidden", "true");
                      var dialog = document.createElement("div");
                      dialog.setAttribute("class", "modal-dialog");
                      //modal.appendChild(dialog);
                      var content = document.createElement("div");
                      dialog.setAttribute("class", "modal-content");
                      //dialog.appendChild(content);
                      var header = document.createElement("div");
                      header.setAttribute("class", "modal-header");
                      //dialog.appendChild(content);
                      var btn2 = document.createElement("BUTTON");
                      btn2.setAttribute("type", "button");
                      btn2.setAttribute("class", "close");
                      btn2.setAttribute("data-dismiss", "modal");
                      btn2.setAttribute("aria-hidden", "true");
                      btn2.innerHTML = "&times;";
                      header.appendChild(btn2);
                      var title = document.createElement("h4");
                      title.setAttribute("id", "myModalLabel");
                      title.setAttribute("class", "modal-title text-black text-center");
                      title.innerHTML = "Add face to Database";
                      header.appendChild(title);
                      content.appendChild(header);
                      var body = document.createElement("div");
                      body.setAttribute("class", "modal-body");
                      var rowdiv = document.createElement("div");
                      rowdiv.setAttribute("class", "row");
                      var imgj1 = document.createElement("img");
                      imgj1.setAttribute("src", img_string + new Date().getTime());
                      imgj1.setAttribute("height", "100");
                      imgj1.setAttribute("width", "100");
                      imgj1.setAttribute("id", people[i].identity + "_" + people[i].camera + "_imageModal");
                      imgj1.setAttribute("class", "person"); //img-circle
                      rowdiv.appendChild(imgj1);
                      body.appendChild(rowdiv);
                      var name = document.createElement("h4");
                      name.setAttribute("class", "text-center text-black");
                      name.setAttribute("id", people[i].identity + "_" + people[i].camera + "nameID");
                      var values = people[i].prediction.split('_');
                      var nameprediction = values[0];
                      name.innerHTML = "<strong>" + nameprediction + " ?</strong>";
                      body.appendChild(name);
                      var form = document.createElement("div");
                      form.setAttribute("class", "form-group has-primary");
                      var input = document.createElement("input");
                      input.setAttribute("class", "form-control");
                      input.setAttribute("placeholder", "Enter Name");
                      input.setAttribute("type", "text");
                      input.setAttribute("id", people[i].identity + "_" + people[i].camera + "_input");
                      form.appendChild(input);
                      body.appendChild(form);
                      content.appendChild(body);
                      var footer = document.createElement("div");
                      footer.setAttribute("class", "modal-footer");
                      //dialog.appendChild(content);
                      var btn3 = document.createElement("BUTTON");
                      btn3.setAttribute("type", "button");
                      btn3.setAttribute("class", "btn btn-primary pull-right");
                      btn3.setAttribute("data-dismiss", "modal");
                      btn3.setAttribute("aria-hidden", "true");
                      btn3.setAttribute("id", people[i].identity + "_" + people[i].camera + "_add");
                      btn3.setAttribute("onclick", "addFace(this.id)");
                      btn3.innerHTML = "Add Face";
                      footer.appendChild(btn3);
                      content.appendChild(footer);
                      dialog.appendChild(content);
                      modal.appendChild(dialog);
                      thumbdiv.appendChild(d1);
                      thumbdiv.appendChild(info);
                      maindiv.appendChild(thumbdiv);
                      document.getElementById("detected-faces").appendChild(maindiv);
                      document.getElementById("detected-faces").appendChild(modal);
                  }
                  else {
                      var x = document.getElementById(people[i].identity + "_" + people[i].camera).getElementsByClassName("progress-bar");
                      for (var j = 0; j < x.length; j++) {
                          console.log("Updating detected face");
                          var values = people[i].prediction.split('_');
                          var name = values[0];
                          var conf = people[i].confidence;
                          ///////////////////////
                          if (name != "unknown") {
                              x[j].setAttribute("class", "progress-bar progress-bar-success");
                              x[j].setAttribute("role", "progress-bar progress-bar-success");
                              var y = document.getElementById(people[i].identity + "_" + people[i].camera).getElementsByClassName("predictedName");
                              y[0].innerHTML = "<strong>" + people[i].prediction + "</strong>";
                          }
                          else {
                              // x[j].setAttribute("class","progress-bar progress-bar-failure");
                              // x[j].setAttribute("role","progress-bar progress-bar-failure");
                              conf = people[i].confidence;
                          }
                          //////////////////////
                          x[j].setAttribute("style", "width:" + conf + "%");
                          x[j].innerHTML = conf + "%";
                      }
                      console.log("Updating image: " + people[i].identity);
                      var img_string = "/get_faceimg/" + people[i].identity + '_' + people[i].camera + "#";
                      $('#' + people[i].identity + "_" + people[i].camera + '_image').attr('src', img_string + new Date().getTime()); //jquery used to update image
                      $('#' + people[i].identity + "_" + people[i].camera + "_imageModal").attr('src', img_string + new Date().getTime()); //update modal image
                  }
                  //console.log(people_string);
              }
          });
          socket.on('alarm_status', function (json) {
              console.log("Alarm Status: " + json);
              var alarm_status = JSON.parse(json);
              if (alarm_status.triggered == true) {
                  $("#alarmStatus").html("Alarm Triggered");
              }
              else {
                  $("#alarmStatus").html(alarm_status.state);
              }
          });
          socket.on('system_monitoring', function (json) {
              console.log("System Monitoring: " + json);
              var systemState = JSON.parse(json);
              var i = 0;
              for (; i < systemState.processingFPS.length; i++) {
                  // document.getElementById( "camera_" + i + "_fps").text = systemState.processing_fps[i];
                  $("#camera_" + i + "_fps").html(systemState.processingFPS[i]);
              }
              document.getElementById("cpu_usage").value = systemState.cpu;
              document.getElementById("memory_usage").value = systemState.memory;
          });
          socket.on('system_data', function (json) {
              console.log("System Data: " + json);
              var system_data = JSON.parse(json);
              var person;
              var i = 0;
              people_string = '';
              for (; i < system_data.people.length; i++) {
                  people_string = people_string + '<option>' + system_data.people[i] + '</option>';
              }
              $('#people').html(people_string);
              var i = 0;
              camera_string = '';
              for (; i < system_data.camNum; i++) {
                  camera_string = camera_string + '<option value="' + i.toString() + '"> Camera ' + i + '</option>';
              }
              camera_string = camera_string + '<option value="All">All</option>';
              $('#cameras').html(camera_string);
              if (system_data.onConnect == true) {
                  //  var myNode = document.getElementById("foo");
                  //  while (myNode.firstChild) {
                  //       myNode.removeChild(myNode.firstChild);
                  // }
                  var icon = '<i class="fa fa-video-camera fa-3x" aria-hidden="true"></i>'
                  var icondiv = '<div class="product-info">' + icon + '</div>'
                  var i = 0;
                  for (; i < system_data.cameras.length; i++) {
                      var elementExists = document.getElementById("camera_" + system_data.cameras[i].camNum)
                      if (elementExists != null) {
                          break
                      }
                      console.log("Cameras:" + system_data.cameras[i]);
                      var camdiv = document.createElement("div");
                      camdiv.setAttribute("class", "alert alert-dismissable alert-success");
                      var btn = document.createElement("BUTTON");
                      btn.setAttribute("type", "button");
                      btn.setAttribute("class", "close");
                      btn.setAttribute("data-dismiss", "alert");
                      btn.setAttribute("aria-hidden", "true");
                      btn.setAttribute("onclick", "removeCamera(this.id)");
                      btn.setAttribute("id", "camera_" + system_data.cameras[i].camNum);
                      btn.innerHTML = "&times;";
                      camdiv.innerHTML = '<div class="text-center"><span>' + icon + '<div><strong>Camera ' + system_data.cameras[i].camNum + ' FPS: <strong id="camera_' + system_data.cameras[i].camNum + '_fps">' + "Loading... </strong></div><div>" + '<font size="0.9">' + system_data.cameras[i].url + '<font>' + '</span></div>';
                      camdiv.appendChild(btn);
                      document.getElementById("system-cameras").appendChild(camdiv);
                      var viddiv = document.createElement("div");
                      viddiv.setAttribute("class", "col-md-4 col-sm-6 col-xs-12");
                      var vidstream = document.createElement("img");
                      vidstream.setAttribute("class", "img-thumbnail panel panel-default");
                      vidstream.setAttribute("id", system_data.cameras[i].camNum);
                      vidstream.setAttribute("src", "/video_streamer/" + system_data.cameras[i].camNum);
                      vidstream.setAttribute("width", "540");
                      viddiv.appendChild(vidstream);
                      document.getElementById("surveillance_panel").appendChild(viddiv);
                  }
                  console.log("Alerts:" + system_data.alerts);
                  var i = 0;
                  for (; i < system_data.alerts.length; i++) {
                      var elementExists = document.getElementById(system_data.alerts[i].alert_id)
                      if (elementExists != null) {
                          break
                      }
                      var alertdiv = document.createElement("div");
                      alertdiv.setAttribute("class", "alert alert-dismissable alert-danger");
                      var btn = document.createElement("BUTTON");
                      btn.setAttribute("type", "button");
                      btn.setAttribute("class", "close");
                      btn.setAttribute("data-dismiss", "alert");
                      btn.setAttribute("aria-hidden", "true");
                      btn.setAttribute("onclick", "removeAlert(this.id)");
                      btn.setAttribute("id", system_data.alerts[i].alert_id);
                      btn.innerHTML = "&times;";
                      alertdiv.innerHTML = system_data.alerts[i].alert_message;
                      alertdiv.appendChild(btn);
                      document.getElementById("alert-list").appendChild(alertdiv);
                  }
              }
          });
      });
  script(src='/stylesheets/plugins/ionslider/ion.rangeSlider.min.js')
  // Bootstrap slider
  script(src='/stylesheets/plugins/bootstrap-slider/bootstrap-slider.js')
  script(src='/stylesheets/plugins/jQuery/jquery-2.2.3.min.js')
  // jQuery UI 1.11.4
  script(src='/stylesheets/dist/js/jquery-ui.min.js')
  // Resolve conflict in jQuery UI tooltip with Bootstrap tooltip
  script.
      $.widget.bridge('uibutton', $.ui.button);
  // Bootstrap 3.3.6
  script(src='/stylesheets/bootstrap/js/bootstrap.min.js')
  // Morris.js charts
  script(src='/stylesheets/dist/js/raphael-min.js')
  script(src='/stylesheets/plugins/morris/morris.min.js')
  // Sparkline
  script(src='/stylesheets/plugins/sparkline/jquery.sparkline.min.js')
  // jvectormap
  script(src='/stylesheets/plugins/jvectormap/jquery-jvectormap-1.2.2.min.js')
  script(src='/stylesheets/plugins/jvectormap/jquery-jvectormap-world-mill-en.js')
  // jQuery Knob Chart
  script(src='/stylesheets/plugins/knob/jquery.knob.js')
  // daterangepicker
  script(src='/stylesheets/dist/js/moment.js')
  script(src='/stylesheets/plugins/daterangepicker/daterangepicker.js')
  // datepicker
  script(src='/stylesheets/plugins/datepicker/bootstrap-datepicker.js')
  // Bootstrap WYSIHTML5
  script(src='/stylesheets/plugins/bootstrap-wysihtml5/bootstrap3-wysihtml5.all.min.js')
  // Slimscroll
  script(src='/stylesheets/plugins/slimScroll/jquery.slimscroll.min.js')
  // FastClick
  script(src='/stylesheets/plugins/fastclick/fastclick.js')
  // AdminLTE App
  script(src='/stylesheets/dist/js/app.min.js')
  // AdminLTE dashboard demo (This is only for demo purposes)
  script(src='/stylesheets/dist/js/pages/dashboard.js')
  // AdminLTE for demo purposes
  script(src='/stylesheets/dist/js/demo.js')
